@using System;
@using Sandbox;
@using Sandbox.UI;

@namespace Jigsaw

@inherits Panel

<style>

	box {
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.container {
		display: flex;
		align-items: center;
		justify-content: center;

		border-radius: 40px 
		
		color: white;
		font-family: Poppins;
		font-weight: 600;
		width: 140px;
		height: 80px;

		margin-top:25px;
		margin-right:25px;
		
		background-color: rgba(black, 0.5);
		backdrop-filter: blur( 5px );

		/*align-self:center;
			align-self:auto;
			margin-top:25px;
			;*/

	}

	.container timer {
		opacity: 1;

		font-size: 30px;
		color: white;
		font-family: Poppins;
		font-weight: 600;

		justify-content: center;
		padding-top:15px;
		padding-bottom: 15px;
		
		text-stroke: 5px black;

		text-align: center;
		width: 100%;
		height: 100%;

	}
</style>


<root>
	@if (Visible)
	{
		<panel class="container">
			<timer>
				@Timer
			</timer>
		</panel>

	}
</root>

@code {
	public static VotingTimer Current { get; set; }

	public string Timer { get; set; } = "0.0";
	public bool Visible = false;

	[ClientRpc]
	public static void SetTimer(float t)
	{
		t = (t < 0) ? 0 : t;
		Current.Timer = t.ToString("0");
	}

	public VotingTimer()
	{
		Current = this;
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(Timer, Visible);
	}

}
